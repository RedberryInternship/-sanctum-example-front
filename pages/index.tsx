import Head from 'next/head';
import Character from '../components/Character';
import { getCharacters, logout } from '../services';
import { useAuth } from '../hooks';
import { GetServerSideProps, NextPage } from 'next';
import Link from 'next/link';
import { deleteCookie, hasCookie } from 'cookies-next';
import { useRouter } from 'next/router';

type Character = {
  id: number;
  name: string;
  image: string;
  likes: number;
};

const Home: NextPage<{
  data: Character[];
  hasToken: boolean;
}> = (props) => {
  const user = useAuth();
  const router = useRouter();

  const logoutHandler = async () => {
    try {
      await logout();
      deleteCookie('XSRF-TOKEN');
      router.reload();
    } catch (error) {}
  };

  return (
    <div>
      <Head>
        <title>God of War - Ragnarök!</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>

      <main className='flex justify-center items-center pt-4 flex-col'>
        <div className='flex justify-between items-center w-full mb-10 px-10'>
          <div></div>
          <h1 className='text-white text-center text-4xl'>
            God of war - Ragnarök!
          </h1>
          {props.hasToken && user ? (
            <div>
              <Link
                href='/add-character'
                className='text-white hover:text-purple-400 mr-4'
              >
                add character
              </Link>
              <button
                className='text-white hover:text-purple-400'
                onClick={logoutHandler}
              >
                Logout
              </button>
            </div>
          ) : (
            <Link href='/login' className='text-white hover:text-purple-400'>
              Login
            </Link>
          )}
        </div>
        <div className='grid grid-cols-2 gap-10 pb-10'>
          {props.data.map(({ id, name, image, likes }) => (
            <Character key={id} name={name} image={image} likes={likes} />
          ))}
        </div>
      </main>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  try {
    const { data } = await getCharacters();
    const hasToken = hasCookie('XSRF-TOKEN', context);
    return {
      props: {
        data,
        hasToken,
      },
    };
  } catch (error) {
    console.log(error);
    return {
      props: {},
      notFound: true,
    };
  }
};
